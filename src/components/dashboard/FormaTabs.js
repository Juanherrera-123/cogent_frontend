import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs";
import GraficaBarraSimple from "@/components/GraficaBarraSimple";
import GraficaBarra from "@/components/GraficaBarra";
import TablaIndividual from "@/components/TablaIndividual";
import TablaDominios from "@/components/TablaDominios";
import TablaDimensiones from "@/components/TablaDimensiones";
export default function FormaTabs({ value, onChange, datos, resumen, promediosDominios, promediosDimensiones, dominios, dimensiones, chartType, tabClass, soloGenerales, tipo, keyResultado, }) {
    return (_jsxs(Tabs, { value: value, onValueChange: onChange, className: "w-full", children: [_jsxs(TabsList, { className: "mb-6 py-2 px-4 scroll-pl-4 w-full flex gap-2 overflow-x-auto whitespace-nowrap", children: [_jsx(TabsTrigger, { className: tabClass, value: "global", children: "Global" }), _jsx(TabsTrigger, { className: tabClass, value: "dominios", children: "Por Dominio" }), _jsx(TabsTrigger, { className: tabClass, value: "dimensiones", children: "Por Dimensi\u00F3n" })] }), _jsx(TabsContent, { value: "global", children: datos.length === 0 ? (_jsxs("div", { className: "text-[var(--gray-medium)] py-4", children: ["No hay resultados de ", tipo === "formaA" ? "Forma A" : "Forma B", "."] })) : (_jsxs(_Fragment, { children: [_jsx(GraficaBarraSimple, { resumen: resumen, titulo: `Niveles de ${tipo === "formaA" ? "Forma A" : "Forma B"}`, chartType: chartType }), !soloGenerales && _jsx(TablaIndividual, { datos: datos, tipo: tipo })] })) }), _jsx(TabsContent, { value: "dominios", children: datos.length === 0 ? (_jsx("div", { className: "text-[var(--gray-medium)] py-4", children: "No hay datos para dominios." })) : (_jsxs(_Fragment, { children: [_jsx(GraficaBarra, { resumen: promediosDominios, titulo: "Promedio de Puntaje Transformado por Dominio", chartType: chartType }), !soloGenerales && (_jsx(TablaDominios, { datos: datos, dominios: dominios, keyResultado: keyResultado }))] })) }), _jsx(TabsContent, { value: "dimensiones", children: datos.length === 0 ? (_jsx("div", { className: "text-[var(--gray-medium)] py-4", children: "No hay datos para dimensiones." })) : (_jsxs(_Fragment, { children: [_jsx(GraficaBarra, { resumen: promediosDimensiones, titulo: "Promedio de Puntaje Transformado por Dimensi\u00F3n", chartType: chartType }), !soloGenerales && (_jsx(TablaDimensiones, { datos: datos, dimensiones: dimensiones, keyResultado: keyResultado }))] })) })] }));
}
